name: CI

on:
  push:

jobs:
  python-build:
    name: 🏗️ Build Python wheels
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: 🧰 Install dependencies
        run: pip install build twine
      - name: 🏗️ Build Python wheels
        run: python -m build
      - name: 🧪 Check package bundles
        run: twine check dist/*
      - name: 📤 Upload Python wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist
  python-code-check:
    name: 🔍 Check Python code
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: 🧰 Install dependencies
        run: pip install .[tests]
      - name: 🔍 Check Python code
        run: ruff check .
  python-typing:
    name: 🔍 Check Python static typing
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: 🧰 Install dependencies
        run: pip install .[tests]
      - name: 🔍 Check Python static typing
        run: mypy .
  python-security:
    name: 🔍 Check Python code security
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: 🧰 Install dependencies
        run: pip install .[tests]
      - name: 🔍 Check Python code security
        run: bandit -c pyproject.toml -r .
  python-test:
    name: 🧪 Test Python code
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 🧰 Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: 🧰 Install dependencies
        run: pip install .[tests]
      - name: 🧪 Test Python code
        run: pytest --cov --cov-report=xml .
      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  # python-publish:
  #   name: 🚀 Publish Python wheels
  #   if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
  #   needs:
  #   - python-build
  #   - python-code-check
  #   - python-typing
  #   - python-security
  #   - python-test
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #   steps:
  #   - name: 📥 Check-out
  #     uses: actions/checkout@v4
  #   - name: 📥 Download Python wheels
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: wheels
  #       path: dist
  #   - name: 🚀 Publish Python wheels
  #     uses: pypa/gh-action-pypi-publish@release/v1
  github-release:
    name: 🚀 Create GitHub release
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
    needs:
      - python-build
      - python-code-check
      - python-typing
      - python-security
      - python-test
    # - python-publish
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Check-out
        uses: actions/checkout@v4
      - name: 📥 Download Python wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist
      - name: 🚀 Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          files: dist/*
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
          generate_release_notes: true
